# ==============================================================================
# SvelteKit 本番用 Dockerfile - Pre-built Base Image 最適化版
# カスタムベースイメージ使用でビルド時間50%短縮
# ==============================================================================

# Build Stage: アプリケーションビルド
FROM fuku-pochi/node-base:latest AS builder

# メタデータ
LABEL stage="builder"

# 作業ディレクトリを設定
WORKDIR /app

# ✅ システムパッケージ（python3, make, g++等）は既にベースイメージに含まれているため不要

# ==============================================================================
# レイヤー1: NPM依存関係（中程度の変更頻度）
# package.json/lock ファイルのみ先にコピー → 依存関係が変わった時のみ再ビルド
# ==============================================================================
COPY package*.json ./

# NPM依存関係をインストール（ビルドに必要）
# ✅ ビルドツールは既にベースイメージに含まれているため高速化
RUN npm ci --prefer-offline --no-audit --progress=false

# ==============================================================================
# レイヤー2: アプリケーションコード（高頻度変更）
# ==============================================================================
COPY . .

# ==============================================================================
# レイヤー3: ビルド実行（アプリケーションコード変更時のみ）
# ==============================================================================
RUN npm run build

# ==============================================================================
# Production Stage: 実行環境
# ==============================================================================
FROM fuku-pochi/node-base:latest AS production

# メタデータ
LABEL maintainer="FukuPochi Team"
LABEL version="2.0.0"
LABEL description="FukuPochi SvelteKit Frontend (Production) - Optimized"

# 作業ディレクトリを設定
WORKDIR /app

# 本番用依存関係のみをインストール
COPY --from=builder --chown=nextjs:nodejs /app/package*.json ./
RUN npm ci --omit=dev --cache /tmp/empty-cache

# ビルド成果物をコピー
COPY --from=builder --chown=nextjs:nodejs /app/build ./build
COPY --from=builder --chown=nextjs:nodejs /app/static ./static

# 必要な設定ファイルのみ
COPY --from=builder --chown=nextjs:nodejs /app/package.json ./

# 環境変数設定（本番用）
ENV NODE_ENV=production
ENV PORT=3000
ENV HOSTNAME="0.0.0.0"

# nextjsユーザーに切り替え
USER nextjs

# ポート3000を公開
EXPOSE 3000

# ヘルスチェック
HEALTHCHECK --interval=30s --timeout=5s --start-period=30s --retries=3 \
    CMD curl --fail http://localhost:3000/ || exit 1

# 起動コマンド：dumb-initでプロセス管理
CMD ["dumb-init", "node", "build"]

# ==============================================================================
# Static Build Variant: 静的ファイル配信用
FROM nginx:alpine AS static

# メタデータ
LABEL variant="static"
LABEL description="FukuPochi SvelteKit Frontend (Static) - Optimized"

# ビルドステージから静的ファイルをコピー
COPY --from=builder /app/build /usr/share/nginx/html

# カスタムNginx設定
COPY docker/nginx/nginx.static.conf /etc/nginx/nginx.conf

# ポート80を公開
EXPOSE 80

# Nginx起動
CMD ["nginx", "-g", "daemon off;"]

# ==============================================================================
# Development Stage: 開発用（デバッグ向け）
FROM fuku-pochi/node-base:latest AS development

WORKDIR /app

# 開発用パッケージ（gitとvimをベースイメージに追加する場合は不要）
RUN apk add --no-cache \
    vim

# 依存関係をインストール
COPY package*.json ./
RUN npm install

# ソースコードをコピー
COPY . .

# ポート5173を公開（開発サーバー）
EXPOSE 5173

# 開発サーバー起動
CMD ["npm", "run", "dev", "--", "--host", "0.0.0.0"]