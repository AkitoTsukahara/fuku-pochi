; PHP-FPM 本番用設定
; FukuPochi Laravel Backend
; www pool configuration

[www]

; Unix user/group of processes
user = www-data
group = www-data

; The address on which to accept FastCGI requests.
listen = 9000

; Set permissions for unix socket
listen.owner = www-data
listen.group = www-data
listen.mode = 0660

; Choose how the process manager will control the number of child processes.
; Possible Values:
;   static  - a fixed number (pm.max_children) of child processes;
;   dynamic - the number of child processes are set dynamically based on the
;             following directives. With this process management, there will be
;             always at least 1 child.
;   ondemand - no children are created at startup. Children will be forked when
;              new requests will connect. The following parameter are used:
;              pm.max_children, pm.process_idle_timeout, pm.max_requests
pm = dynamic

; The number of child processes to be created when pm is set to 'static' and the
; maximum number of child processes when pm is set to 'dynamic' or 'ondemand'.
; This value sets the limit on the number of simultaneous requests that will be
; served. Equivalent to the ApacheMaxClients directive with mpm_prefork.
; Equivalent to the PHP_FCGI_CHILDREN environment variable in the original PHP
; CGI. The below defaults are based on a server without much resources. Don't
; forget to tweak pm.* to fit your needs.
; Note: Used when pm is set to 'static', 'dynamic' or 'ondemand'
pm.max_children = 10

; The number of child processes created on startup.
; Note: Used only when pm is set to 'dynamic'
pm.start_servers = 3

; The desired minimum number of idle server processes.
; Note: Used only when pm is set to 'dynamic'
pm.min_spare_servers = 2

; The desired maximum number of idle server processes.
; Note: Used only when pm is set to 'dynamic'
pm.max_spare_servers = 5

; The number of seconds after which an idle process will be killed.
; Note: Used only when pm is set to 'ondemand'
pm.process_idle_timeout = 10s

; The number of requests each child process should execute before respawning.
; This can be useful to work around memory leaks in 3rd party libraries. For
; endless request processing specify '0'. Equivalent to PHP_FCGI_MAX_REQUESTS.
pm.max_requests = 1000

; The URI to view the FPM status page.
pm.status_path = /fpm-status

; The ping URI to call the monitoring page of FPM.
pm.ping.path = /fpm-ping

; This directive may be used to customize the response of a ping request. The
; response is formatted as text/plain with a 200 response code.
pm.ping.response = pong

; Logging
access.log = /var/log/php-fpm/access.log
access.format = "%R - %u %t \"%m %r\" %s"

; The log file for slow requests
slowlog = /var/log/php-fpm/slow.log

; The timeout for serving a single request after which a PHP backtrace will be
; dumped to the 'slowlog' file. A value of '0s' means 'off'.
request_slowlog_timeout = 5s

; Depth of slow log stack trace.
request_slowlog_trace_depth = 20

; The timeout for serving a single request after which the worker process will
; be killed. This option should be used when 'max_execution_time' ini option
; does not stop script execution for some reason. A value of '0' means 'off'.
request_terminate_timeout = 30s

; Set open file descriptor rlimit.
rlimit_files = 1024

; Set max core size rlimit.
rlimit_core = 0

; Chroot to this directory at the start.
;chroot =

; Chdir to this directory at the start.
chdir = /var/www/html

; Redirect worker stdout and stderr into main error log. If not set, stdout and
; stderr will be redirected to /dev/null according to FastCGI specs.
catch_workers_output = yes

; Clear environment in FPM workers
; Prevents arbitrary environment variables from reaching FPM worker processes
; by clearing the environment in workers before env vars specified in this
; pool configuration are added.
clear_env = no

; Pass environment variables like LD_LIBRARY_PATH. All $VARIABLEs are taken from
; the current environment.
env[HOSTNAME] = $HOSTNAME
env[PATH] = /usr/local/bin:/usr/bin:/bin
env[TMP] = /tmp
env[TMPDIR] = /tmp
env[TEMP] = /tmp

; Additional php.ini defines, specific to this pool of workers.
php_admin_value[sendmail_path] = /usr/sbin/sendmail -t -i -f www@my.domain.com
php_flag[display_errors] = off
php_admin_value[error_log] = /var/log/php-fpm/www-error.log
php_admin_flag[log_errors] = on
php_admin_value[memory_limit] = 256M