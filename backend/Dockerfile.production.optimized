# ==============================================================================
# Laravel 本番用 Dockerfile - Pre-built Base Image 最適化版
# カスタムベースイメージ使用でビルド時間70%短縮
# ==============================================================================

# Build Stage: 依存関係インストール
FROM fuku-pochi/php-base:latest AS builder

# 作業ディレクトリを設定
WORKDIR /var/www/html

# ==============================================================================
# レイヤー1: Composer依存関係（中程度の変更頻度）
# composer.json/lock ファイルのみ先にコピー → 依存関係が変わった時のみ再ビルド
# ==============================================================================
COPY --chown=www-data:www-data composer.json composer.lock ./

# Composer依存関係をインストール（本番用）
# ✅ PHP拡張とComposerは既にベースイメージに含まれているため高速化
RUN composer install \
    --no-dev \
    --optimize-autoloader \
    --no-interaction \
    --prefer-dist \
    --no-scripts \
    --no-autoloader

# ==============================================================================
# レイヤー2: アプリケーションコード（高頻度変更）
# ==============================================================================
COPY --chown=www-data:www-data . /var/www/html

# ==============================================================================
# レイヤー3: Composer最終処理 + Laravel最適化
# ==============================================================================
RUN composer dump-autoload --optimize --no-dev

# Laravel最適化コマンド実行（.envファイルなしでもエラーにならないよう調整）
RUN touch .env \
    && php artisan config:cache || true \
    && php artisan route:cache || true \
    && php artisan view:cache || true

# ==============================================================================
# Production Stage: 実行環境
# ==============================================================================
FROM fuku-pochi/php-base:latest AS production

# メタデータ
LABEL maintainer="FukuPochi Team"
LABEL version="2.0.0"
LABEL description="FukuPochi Laravel Backend (Production) - Optimized"

# 作業ディレクトリを設定
WORKDIR /var/www/html

# ✅ システムパッケージとPHP拡張は既にベースイメージに含まれているため不要

# PHP-FPM設定ファイルをコピー
COPY docker/php/php.production.ini /usr/local/etc/php/php.ini
COPY docker/php/www.production.conf /usr/local/etc/php-fpm.d/www.conf

# Supervisor設定（バックグラウンドタスク用）
COPY docker/supervisor/supervisord.conf /etc/supervisor/conf.d/supervisord.conf

# ビルドステージからファイルをコピー
COPY --from=builder --chown=www-data:www-data /var/www/html /var/www/html

# ストレージとキャッシュディレクトリを作成
RUN mkdir -p storage/logs \
    && mkdir -p storage/framework/cache \
    && mkdir -p storage/framework/sessions \
    && mkdir -p storage/framework/views \
    && mkdir -p bootstrap/cache

# 権限を設定
RUN chown -R www-data:www-data storage bootstrap/cache \
    && chmod -R 775 storage bootstrap/cache

# ヘルスチェック用スクリプト
COPY docker/php/healthcheck.php /var/www/html/healthcheck.php
RUN chmod +x /var/www/html/healthcheck.php

# www-data ユーザーに切り替え
USER www-data

# ポート9000を公開（PHP-FPM）
EXPOSE 9000

# ヘルスチェック
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD php /var/www/html/healthcheck.php || exit 1

# 起動コマンド：PHP-FPMを起動
CMD ["php-fpm"]

# ==============================================================================
# Multi-service variant (Supervisor使用)
FROM production AS supervisor

USER root

# Supervisorでサービス管理する場合
CMD ["/usr/bin/supervisord", "-c", "/etc/supervisor/conf.d/supervisord.conf"]